{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Frame.svelte",
    "../src/Svelte.svelte",
    "../src/VDom.svelte"
  ],
  "sourcesContent": [
    "<svelte:options accessors/>\n<div class=\"container\">\n  <p>\n    <button on:click={populate}>Populate</button> | <button on:click={clear}>Clear</button>\n  </p>\n  <p class=\"help\">\n    <span class=\"category\">Keyboard shortcuts:</span><br>\n    <strong>Headers (1-6 &amp; 0)</strong>: <code>Ctrl+1</code>,\n    <strong>Undo</strong>: <code>Ctrl+Z</code>,\n    <strong>Indent List</strong>: <code>Tab</code> / <code>Shift+Tab</code>\n  </p>\n  <p class=\"help\">\n    <span class=\"category\">Text entry:</span><br>\n    <strong>Bullet List</strong>: <code>* </code> / <code>- </code>,\n    <strong>Ordered List</strong>: <code>1._</code> / <code>a._</code> / <code>i._</code> / <code>5._</code>,\n    <strong>Headers 1-6</strong>: <code>#_</code> / <code>##_</code>\n  </p>\n\n  <h3>Virtual DOM Renderer</h3>\n  <Frame component={VDom} {editor} {paper} {modules}/>\n\n  <h3>Svelte Renderer <small>(experimental)</small></h3>\n  <Frame component={Svelte} {editor} {paper} modules={svelteModules}/>\n</div>\n\n<script>\nimport { Editor } from '@typewriter/editor';\nimport { getDefaultPaper } from '@typewriter/view';\nimport { shortcuts, input, history, keyShortcuts, smartEntry, smartQuotes, placeholder } from '@typewriter/modules';\nimport { hoverMenu, HoverMenu } from '@typewriter/ui';\nimport Frame from './Frame.svelte';\nimport Svelte from './Svelte.svelte';\nimport VDom from './VDom.svelte';\n\nexport const editor = new Editor();\nconst paper = getDefaultPaper();\nconst modules = {\n  shortcuts: shortcuts(),\n  input: input(),\n  history: history(),\n  keyShortcuts: keyShortcuts(),\n  smartEntry: smartEntry(),\n  smartQuotes: smartQuotes(),\n  placeholder: placeholder('Write here...'),\n  hoverMenu: hoverMenu(),\n  highlightAs: (editor, root) => {\n    const exp = /the/ig;\n    function onDecorate(event) {\n      const decorators = event.detail;\n      const text = editor.getText();\n      let match;\n      while ((match = exp.exec(text))) {\n        decorators.mark(exp.lastIndex - match[0].length, exp.lastIndex, { class: 'highlight' });\n      }\n    }\n    root.addEventListener('decorate', onDecorate);\n    return {\n      onDestroy() {\n        root.removeEventListener('decorate', onDecorate);\n      }\n    }\n  }\n};\nconst svelteModules = { ...modules, input: input({ forceTextUpdates: true }) };\n\n// Let the CSS get created so it will add to the iframes\nlet menu = new HoverMenu({\n  target: document.body\n});\nmenu.$destroy();\nmenu = null;\n\nfunction populate() {\n  editor.setContents(editor.delta([\n    { insert: 'The Two Towers' },\n    { insert: '\\n', attributes: { header: 1 } },\n    { insert: 'Aragorn sped on up the hill.\\n' },\n    { insert: 'Gandalf', attributes: { bold: true } },\n    { insert: ' the ', attributes: { bold: true, italic: true } },\n    { insert: 'Grey', attributes: { italic: true } },\n    { insert: '\\n' },\n    { insert: 'asdf123' },\n    { insert: '\\n', attributes: { list: 'bullet' } },\n    { insert: 'asdf' },\n    { insert: '\\n', attributes: { list: 'ordered', indent: 1 } },\n    { insert: { image: 'https://uploads-ssl.webflow.com/5c3e4c64d1dbdf089664a286/5c3e841bb511dcf520fcc2cd_cabin-sm.jpg', width: 400, alt: 'Cabin' },\n      attributes: { link: 'https://github.com/typewriter-editor/typewriter/' } },\n    { insert: '\\n' },\n  ]), 'user');\n}\n\nfunction clear() {\n  editor.setContents(editor.delta(), 'user');\n}\n\n</script>\n\n<style>\n:global(body) {\n  margin: 0;\n}\n.container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n.container :global(iframe) {\n  flex: 1 1;\n}\nh3 {\n  margin-bottom: 0;\n}\n.help {\n  margin: 4px 0;\n  font-size: 12px;\n}\n.help .category {\n  font-weight: bold;\n  text-decoration: underline;\n}\n.help code {\n  font-family: monospace;\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  background: #f4f4f4;\n  font-size: 11px;\n  line-height: 1;\n  padding: 2px 4px;\n}\n:global(.placeholder::before) {\n  position: absolute;\n  content: attr(data-placeholder);\n  opacity: 0.5;\n}\n:global(.highlight) {\n  background: yellow;\n}\n</style>\n",
    "<iframe bind:this={frame} title></iframe>\n\n<style>\niframe {\n  border: none;\n  width: 100%;\n}\n</style>\n\n<script>\n\nlet frame;\nlet win;\nlet doc;\nlet head;\nlet body;\nlet content;\nlet component;\nlet props;\n\n$: {\n  ({ component, ...props } = $$props);\n  if (content) content.set(props);\n}\n\n$: if (frame) {\n  frame.addEventListener('load', loadHandler);\n  if (frame.contentDocument.readyState === 'complete' && frame.contentDocument.defaultView) {\n    loadHandler();\n  } else {\n    frame.addEventListener('load', loadHandler);\n  }\n}\n\nfunction loadHandler() {\n  win = frame.contentWindow;\n  doc = frame.contentDocument;\n  head = doc.head;\n  body = doc.body;\n\n  doc.insertBefore(document.doctype.cloneNode(true), doc.documentElement);\n\n  const style = doc.createElement('style');\n  style.innerText = `html,body {\n    background: none !important;\n    margin: 0 !important;\n    padding: 0px !important;\n    overflow: hidden !important;\n    height: 100% !important;\n  }`;\n  head.appendChild(style);\n\n  Array.from(document.querySelectorAll('style, link[rel=\"stylesheet\"]'))\n    .forEach(node => head.appendChild(node.cloneNode(true)));\n\n  if (component) {\n    content = new component({ target: body, props });\n  }\n}\n</script>\n",
    "<script>\nimport { tick } from 'svelte';\nimport { Editor } from '@typewriter/editor';\nimport { getDefaultPaper, getBounds } from '@typewriter/view';\nimport { EditorView } from '@typewriter/view-svelte';\nimport { shortcuts, input, history, keyShortcuts, smartEntry, smartQuotes } from '@typewriter/modules';\n\nexport let editor;\nexport let paper;\nexport let modules;\n\nlet view;\nlet selection = editor.selection;\nlet selectionBox = null;\n\neditor.on('selection-change', () => selection = editor.selection);\n\n$: updateBox(selection);\n\nasync function updateBox(selection) {\n  await tick();\n  selectionBox = selection ? view.getBounds() : null;\n}\n\nfunction outputBox(box) {\n  if (!box) return null;\n  return `left: ${box.left}, top: ${box.top}, width: ${box.width}, height: ${box.height}`;\n}\n\n</script>\n<svelte:options accessors/>\n\n<div class=\"container\">\n  <EditorView bind:this={view} {editor} {paper} {modules} class=\"typewriter-editor\" />\n\n  <p>\n    <em>Selection: {selection}</em><br>\n    <em>Box: {outputBox(selectionBox)}</em>\n  </p>\n</div>\n\n<style>\n.container {\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n  height: 100%;\n}\n:global(.typewriter-editor) {\n  flex: 1 1;\n  padding: .375rem .75rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  color: #495057;\n  border: 1px solid #ced4da;\n  border-radius: .25rem;\n  box-sizing: border-box;\n  height: calc(100vh - 20px - 68px);\n  overflow: auto;\n  transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;\n}\n:global(.typewriter-editor:focus) {\n  border-color: #80bdff;\n  outline: 0;\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, .25);\n}\n</style>\n",
    "<script>\nimport { tick } from 'svelte';\nimport { Editor } from '@typewriter/editor';\nimport { getDefaultPaper, getBounds } from '@typewriter/view';\nimport { View } from '@typewriter/view-vdom';\nimport { shortcuts, input, history, keyShortcuts, smartEntry, smartQuotes } from '@typewriter/modules';\n\nexport let editor;\nexport let paper;\nexport let modules;\n\nlet root;\nlet view;\nlet selection = editor.selection;\nlet selectionBox = null;\n\neditor.on('selection-change', () => selection = editor.selection);\n\n$: updateBox(selection);\n\n$: if (editor && paper && root) {\n  view = new View(editor, paper, { root, modules });\n}\n\nasync function updateBox(selection) {\n  await tick();\n  selectionBox = selection ? view.getBounds(selection[0], selection[1]) : null;\n}\n\nfunction outputBox(box) {\n  if (!box) return null;\n  return `left: ${box.left}, top: ${box.top}, width: ${box.width}, height: ${box.height}`;\n}\n\n</script>\n<svelte:options accessors/>\n\n<div class=\"container\">\n  <div bind:this={root} class=\"typewriter-editor\"></div>\n\n  <p>\n    <em>Selection: {selection}</em><br>\n    <em>Box: {outputBox(selectionBox)}</em>\n  </p>\n</div>\n\n<style>\n.container {\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n  height: 100%;\n}\n.typewriter-editor {\n  flex: 1 1;\n  padding: .375rem .75rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  color: #495057;\n  border: 1px solid #ced4da;\n  border-radius: .25rem;\n  box-sizing: border-box;\n  height: calc(100vh - 20px - 68px);\n  overflow: auto;\n  transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;\n}\n.typewriter-editor:focus {\n  border-color: #80bdff;\n  outline: 0;\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, .25);\n}\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}